#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyKSOmni
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qlks")]
	public partial class qlksDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertTHUEPHONG(THUEPHONG instance);
    partial void UpdateTHUEPHONG(THUEPHONG instance);
    partial void DeleteTHUEPHONG(THUEPHONG instance);
    partial void InsertCHITIETHOADONDATTIEC(CHITIETHOADONDATTIEC instance);
    partial void UpdateCHITIETHOADONDATTIEC(CHITIETHOADONDATTIEC instance);
    partial void DeleteCHITIETHOADONDATTIEC(CHITIETHOADONDATTIEC instance);
    partial void InsertCHITIETHOADONDICHVU(CHITIETHOADONDICHVU instance);
    partial void UpdateCHITIETHOADONDICHVU(CHITIETHOADONDICHVU instance);
    partial void DeleteCHITIETHOADONDICHVU(CHITIETHOADONDICHVU instance);
    partial void InsertCHITIETMONAN(CHITIETMONAN instance);
    partial void UpdateCHITIETMONAN(CHITIETMONAN instance);
    partial void DeleteCHITIETMONAN(CHITIETMONAN instance);
    partial void InsertDATPHONG(DATPHONG instance);
    partial void UpdateDATPHONG(DATPHONG instance);
    partial void DeleteDATPHONG(DATPHONG instance);
    partial void InsertDICHVU(DICHVU instance);
    partial void UpdateDICHVU(DICHVU instance);
    partial void DeleteDICHVU(DICHVU instance);
    partial void InsertHOADONDATTIEC(HOADONDATTIEC instance);
    partial void UpdateHOADONDATTIEC(HOADONDATTIEC instance);
    partial void DeleteHOADONDATTIEC(HOADONDATTIEC instance);
    partial void InsertHOADONDICHVU(HOADONDICHVU instance);
    partial void UpdateHOADONDICHVU(HOADONDICHVU instance);
    partial void DeleteHOADONDICHVU(HOADONDICHVU instance);
    partial void InsertHOADONPHONG(HOADONPHONG instance);
    partial void UpdateHOADONPHONG(HOADONPHONG instance);
    partial void DeleteHOADONPHONG(HOADONPHONG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertMONAN(MONAN instance);
    partial void UpdateMONAN(MONAN instance);
    partial void DeleteMONAN(MONAN instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    #endregion
		
		public qlksDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["qlksConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public qlksDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlksDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<THUEPHONG> THUEPHONGs
		{
			get
			{
				return this.GetTable<THUEPHONG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHOADONDATTIEC> CHITIETHOADONDATTIECs
		{
			get
			{
				return this.GetTable<CHITIETHOADONDATTIEC>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHOADONDICHVU> CHITIETHOADONDICHVUs
		{
			get
			{
				return this.GetTable<CHITIETHOADONDICHVU>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETMONAN> CHITIETMONANs
		{
			get
			{
				return this.GetTable<CHITIETMONAN>();
			}
		}
		
		public System.Data.Linq.Table<DATPHONG> DATPHONGs
		{
			get
			{
				return this.GetTable<DATPHONG>();
			}
		}
		
		public System.Data.Linq.Table<DICHVU> DICHVUs
		{
			get
			{
				return this.GetTable<DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<HOADONDATTIEC> HOADONDATTIECs
		{
			get
			{
				return this.GetTable<HOADONDATTIEC>();
			}
		}
		
		public System.Data.Linq.Table<HOADONDICHVU> HOADONDICHVUs
		{
			get
			{
				return this.GetTable<HOADONDICHVU>();
			}
		}
		
		public System.Data.Linq.Table<HOADONPHONG> HOADONPHONGs
		{
			get
			{
				return this.GetTable<HOADONPHONG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<MONAN> MONANs
		{
			get
			{
				return this.GetTable<MONAN>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Tendn;
		
		private string _Matkhau;
		
		private string _LoaiTaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTendnChanging(string value);
    partial void OnTendnChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    partial void OnLoaiTaiKhoanChanging(string value);
    partial void OnLoaiTaiKhoanChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tendn", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tendn
		{
			get
			{
				return this._Tendn;
			}
			set
			{
				if ((this._Tendn != value))
				{
					this.OnTendnChanging(value);
					this.SendPropertyChanging();
					this._Tendn = value;
					this.SendPropertyChanged("Tendn");
					this.OnTendnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="Char(20)")]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTaiKhoan", DbType="Char(10)")]
		public string LoaiTaiKhoan
		{
			get
			{
				return this._LoaiTaiKhoan;
			}
			set
			{
				if ((this._LoaiTaiKhoan != value))
				{
					this.OnLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._LoaiTaiKhoan = value;
					this.SendPropertyChanged("LoaiTaiKhoan");
					this.OnLoaiTaiKhoanChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUEPHONG")]
	public partial class THUEPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoPhieuTP;
		
		private string _SoPhieuDP;
		
		private string _MaKH;
		
		private string _MaPhong;
		
		private string _Ngayden;
		
		private string _Ngaydi;
		
		private EntityRef<DATPHONG> _DATPHONG;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoPhieuTPChanging(string value);
    partial void OnSoPhieuTPChanged();
    partial void OnSoPhieuDPChanging(string value);
    partial void OnSoPhieuDPChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnNgaydenChanging(string value);
    partial void OnNgaydenChanged();
    partial void OnNgaydiChanging(string value);
    partial void OnNgaydiChanged();
    #endregion
		
		public THUEPHONG()
		{
			this._DATPHONG = default(EntityRef<DATPHONG>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhieuTP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoPhieuTP
		{
			get
			{
				return this._SoPhieuTP;
			}
			set
			{
				if ((this._SoPhieuTP != value))
				{
					this.OnSoPhieuTPChanging(value);
					this.SendPropertyChanging();
					this._SoPhieuTP = value;
					this.SendPropertyChanged("SoPhieuTP");
					this.OnSoPhieuTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhieuDP", DbType="Char(10)")]
		public string SoPhieuDP
		{
			get
			{
				return this._SoPhieuDP;
			}
			set
			{
				if ((this._SoPhieuDP != value))
				{
					if (this._DATPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoPhieuDPChanging(value);
					this.SendPropertyChanging();
					this._SoPhieuDP = value;
					this.SendPropertyChanged("SoPhieuDP");
					this.OnSoPhieuDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="Char(10)")]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngayden", DbType="NVarChar(50)")]
		public string Ngayden
		{
			get
			{
				return this._Ngayden;
			}
			set
			{
				if ((this._Ngayden != value))
				{
					this.OnNgaydenChanging(value);
					this.SendPropertyChanging();
					this._Ngayden = value;
					this.SendPropertyChanged("Ngayden");
					this.OnNgaydenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydi", DbType="NVarChar(50)")]
		public string Ngaydi
		{
			get
			{
				return this._Ngaydi;
			}
			set
			{
				if ((this._Ngaydi != value))
				{
					this.OnNgaydiChanging(value);
					this.SendPropertyChanging();
					this._Ngaydi = value;
					this.SendPropertyChanged("Ngaydi");
					this.OnNgaydiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATPHONG_THUEPHONG", Storage="_DATPHONG", ThisKey="SoPhieuDP", OtherKey="SoPhieuDP", IsForeignKey=true)]
		public DATPHONG DATPHONG
		{
			get
			{
				return this._DATPHONG.Entity;
			}
			set
			{
				DATPHONG previousValue = this._DATPHONG.Entity;
				if (((previousValue != value) 
							|| (this._DATPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATPHONG.Entity = null;
						previousValue.THUEPHONGs.Remove(this);
					}
					this._DATPHONG.Entity = value;
					if ((value != null))
					{
						value.THUEPHONGs.Add(this);
						this._SoPhieuDP = value.SoPhieuDP;
					}
					else
					{
						this._SoPhieuDP = default(string);
					}
					this.SendPropertyChanged("DATPHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_THUEPHONG", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.THUEPHONGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.THUEPHONGs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_THUEPHONG", Storage="_PHONG", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.THUEPHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.THUEPHONGs.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHOADONDATTIEC")]
	public partial class CHITIETHOADONDATTIEC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCTDT;
		
		private System.Nullable<int> _SoLuongBan;
		
		private System.Nullable<int> _DonGia;
		
		private string _NgayDat;
		
		private string _NgayTT;
		
		private EntitySet<HOADONDATTIEC> _HOADONDATTIECs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTDTChanging(string value);
    partial void OnMaCTDTChanged();
    partial void OnSoLuongBanChanging(System.Nullable<int> value);
    partial void OnSoLuongBanChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnNgayDatChanging(string value);
    partial void OnNgayDatChanged();
    partial void OnNgayTTChanging(string value);
    partial void OnNgayTTChanged();
    #endregion
		
		public CHITIETHOADONDATTIEC()
		{
			this._HOADONDATTIECs = new EntitySet<HOADONDATTIEC>(new Action<HOADONDATTIEC>(this.attach_HOADONDATTIECs), new Action<HOADONDATTIEC>(this.detach_HOADONDATTIECs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTDT", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCTDT
		{
			get
			{
				return this._MaCTDT;
			}
			set
			{
				if ((this._MaCTDT != value))
				{
					this.OnMaCTDTChanging(value);
					this.SendPropertyChanging();
					this._MaCTDT = value;
					this.SendPropertyChanged("MaCTDT");
					this.OnMaCTDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongBan", DbType="Int")]
		public System.Nullable<int> SoLuongBan
		{
			get
			{
				return this._SoLuongBan;
			}
			set
			{
				if ((this._SoLuongBan != value))
				{
					this.OnSoLuongBanChanging(value);
					this.SendPropertyChanging();
					this._SoLuongBan = value;
					this.SendPropertyChanged("SoLuongBan");
					this.OnSoLuongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="NVarChar(50)")]
		public string NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTT", DbType="NVarChar(50)")]
		public string NgayTT
		{
			get
			{
				return this._NgayTT;
			}
			set
			{
				if ((this._NgayTT != value))
				{
					this.OnNgayTTChanging(value);
					this.SendPropertyChanging();
					this._NgayTT = value;
					this.SendPropertyChanged("NgayTT");
					this.OnNgayTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETHOADONDATTIEC_HOADONDATTIEC", Storage="_HOADONDATTIECs", ThisKey="MaCTDT", OtherKey="MaCTDT")]
		public EntitySet<HOADONDATTIEC> HOADONDATTIECs
		{
			get
			{
				return this._HOADONDATTIECs;
			}
			set
			{
				this._HOADONDATTIECs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONDATTIECs(HOADONDATTIEC entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETHOADONDATTIEC = this;
		}
		
		private void detach_HOADONDATTIECs(HOADONDATTIEC entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETHOADONDATTIEC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHOADONDICHVU")]
	public partial class CHITIETHOADONDICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCTDV;
		
		private string _MaDV;
		
		private System.Nullable<int> _SL;
		
		private System.Nullable<int> _DonGia;
		
		private EntitySet<HOADONDICHVU> _HOADONDICHVUs;
		
		private EntityRef<DICHVU> _DICHVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTDVChanging(string value);
    partial void OnMaCTDVChanged();
    partial void OnMaDVChanging(string value);
    partial void OnMaDVChanged();
    partial void OnSLChanging(System.Nullable<int> value);
    partial void OnSLChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public CHITIETHOADONDICHVU()
		{
			this._HOADONDICHVUs = new EntitySet<HOADONDICHVU>(new Action<HOADONDICHVU>(this.attach_HOADONDICHVUs), new Action<HOADONDICHVU>(this.detach_HOADONDICHVUs));
			this._DICHVU = default(EntityRef<DICHVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTDV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCTDV
		{
			get
			{
				return this._MaCTDV;
			}
			set
			{
				if ((this._MaCTDV != value))
				{
					this.OnMaCTDVChanging(value);
					this.SendPropertyChanging();
					this._MaCTDV = value;
					this.SendPropertyChanged("MaCTDV");
					this.OnMaCTDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="Char(10)")]
		public string MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int")]
		public System.Nullable<int> SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETHOADONDICHVU_HOADONDICHVU", Storage="_HOADONDICHVUs", ThisKey="MaCTDV", OtherKey="MaCTDV")]
		public EntitySet<HOADONDICHVU> HOADONDICHVUs
		{
			get
			{
				return this._HOADONDICHVUs;
			}
			set
			{
				this._HOADONDICHVUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CHITIETHOADONDICHVU", Storage="_DICHVU", ThisKey="MaDV", OtherKey="MaDV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.CHITIETHOADONDICHVUs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONDICHVUs.Add(this);
						this._MaDV = value.MaDV;
					}
					else
					{
						this._MaDV = default(string);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONDICHVUs(HOADONDICHVU entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETHOADONDICHVU = this;
		}
		
		private void detach_HOADONDICHVUs(HOADONDICHVU entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETHOADONDICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETMONAN")]
	public partial class CHITIETMONAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMA;
		
		private string _TenMA;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _TongTien;
		
		private EntityRef<MONAN> _MONAN1;
		
		private EntityRef<MONAN> _MONAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMAChanging(string value);
    partial void OnMAMAChanged();
    partial void OnTenMAChanging(string value);
    partial void OnTenMAChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    #endregion
		
		public CHITIETMONAN()
		{
			this._MONAN1 = default(EntityRef<MONAN>);
			this._MONAN = default(EntityRef<MONAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMA", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMA
		{
			get
			{
				return this._MAMA;
			}
			set
			{
				if ((this._MAMA != value))
				{
					if (this._MONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMAChanging(value);
					this.SendPropertyChanging();
					this._MAMA = value;
					this.SendPropertyChanged("MAMA");
					this.OnMAMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMA", DbType="NVarChar(50)")]
		public string TenMA
		{
			get
			{
				return this._TenMA;
			}
			set
			{
				if ((this._TenMA != value))
				{
					this.OnTenMAChanging(value);
					this.SendPropertyChanging();
					this._TenMA = value;
					this.SendPropertyChanged("TenMA");
					this.OnTenMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETMONAN_MONAN", Storage="_MONAN1", ThisKey="MAMA", OtherKey="MaMA", IsUnique=true, IsForeignKey=false)]
		public MONAN MONAN1
		{
			get
			{
				return this._MONAN1.Entity;
			}
			set
			{
				MONAN previousValue = this._MONAN1.Entity;
				if (((previousValue != value) 
							|| (this._MONAN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONAN1.Entity = null;
						previousValue.CHITIETMONAN1 = null;
					}
					this._MONAN1.Entity = value;
					if ((value != null))
					{
						value.CHITIETMONAN1 = this;
					}
					this.SendPropertyChanged("MONAN1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CHITIETMONAN", Storage="_MONAN", ThisKey="MAMA", OtherKey="MaMA", IsForeignKey=true)]
		public MONAN MONAN
		{
			get
			{
				return this._MONAN.Entity;
			}
			set
			{
				MONAN previousValue = this._MONAN.Entity;
				if (((previousValue != value) 
							|| (this._MONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONAN.Entity = null;
						previousValue.CHITIETMONAN = null;
					}
					this._MONAN.Entity = value;
					if ((value != null))
					{
						value.CHITIETMONAN = this;
						this._MAMA = value.MaMA;
					}
					else
					{
						this._MAMA = default(string);
					}
					this.SendPropertyChanged("MONAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DATPHONG")]
	public partial class DATPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoPhieuDP;
		
		private string _MaKH;
		
		private string _NgayDat;
		
		private System.Nullable<int> _TienDat;
		
		private EntitySet<THUEPHONG> _THUEPHONGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoPhieuDPChanging(string value);
    partial void OnSoPhieuDPChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnNgayDatChanging(string value);
    partial void OnNgayDatChanged();
    partial void OnTienDatChanging(System.Nullable<int> value);
    partial void OnTienDatChanged();
    #endregion
		
		public DATPHONG()
		{
			this._THUEPHONGs = new EntitySet<THUEPHONG>(new Action<THUEPHONG>(this.attach_THUEPHONGs), new Action<THUEPHONG>(this.detach_THUEPHONGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhieuDP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoPhieuDP
		{
			get
			{
				return this._SoPhieuDP;
			}
			set
			{
				if ((this._SoPhieuDP != value))
				{
					this.OnSoPhieuDPChanging(value);
					this.SendPropertyChanging();
					this._SoPhieuDP = value;
					this.SendPropertyChanged("SoPhieuDP");
					this.OnSoPhieuDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="NVarChar(50)")]
		public string NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienDat", DbType="Int")]
		public System.Nullable<int> TienDat
		{
			get
			{
				return this._TienDat;
			}
			set
			{
				if ((this._TienDat != value))
				{
					this.OnTienDatChanging(value);
					this.SendPropertyChanging();
					this._TienDat = value;
					this.SendPropertyChanged("TienDat");
					this.OnTienDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATPHONG_THUEPHONG", Storage="_THUEPHONGs", ThisKey="SoPhieuDP", OtherKey="SoPhieuDP")]
		public EntitySet<THUEPHONG> THUEPHONGs
		{
			get
			{
				return this._THUEPHONGs;
			}
			set
			{
				this._THUEPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATPHONG", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DATPHONGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DATPHONGs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THUEPHONGs(THUEPHONG entity)
		{
			this.SendPropertyChanging();
			entity.DATPHONG = this;
		}
		
		private void detach_THUEPHONGs(THUEPHONG entity)
		{
			this.SendPropertyChanging();
			entity.DATPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DICHVU")]
	public partial class DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDV;
		
		private string _TenDV;
		
		private System.Nullable<int> _DonGia;
		
		private EntitySet<CHITIETHOADONDICHVU> _CHITIETHOADONDICHVUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDVChanging(string value);
    partial void OnMaDVChanged();
    partial void OnTenDVChanging(string value);
    partial void OnTenDVChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public DICHVU()
		{
			this._CHITIETHOADONDICHVUs = new EntitySet<CHITIETHOADONDICHVU>(new Action<CHITIETHOADONDICHVU>(this.attach_CHITIETHOADONDICHVUs), new Action<CHITIETHOADONDICHVU>(this.detach_CHITIETHOADONDICHVUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDV", DbType="NVarChar(20)")]
		public string TenDV
		{
			get
			{
				return this._TenDV;
			}
			set
			{
				if ((this._TenDV != value))
				{
					this.OnTenDVChanging(value);
					this.SendPropertyChanging();
					this._TenDV = value;
					this.SendPropertyChanged("TenDV");
					this.OnTenDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CHITIETHOADONDICHVU", Storage="_CHITIETHOADONDICHVUs", ThisKey="MaDV", OtherKey="MaDV")]
		public EntitySet<CHITIETHOADONDICHVU> CHITIETHOADONDICHVUs
		{
			get
			{
				return this._CHITIETHOADONDICHVUs;
			}
			set
			{
				this._CHITIETHOADONDICHVUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHOADONDICHVUs(CHITIETHOADONDICHVU entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_CHITIETHOADONDICHVUs(CHITIETHOADONDICHVU entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADONDATTIEC")]
	public partial class HOADONDATTIEC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHDDT;
		
		private string _MaKH;
		
		private string _MaCTDT;
		
		private string _NgayTT;
		
		private System.Nullable<int> _Tongtien;
		
		private EntityRef<CHITIETHOADONDATTIEC> _CHITIETHOADONDATTIEC;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDDTChanging(string value);
    partial void OnMaHDDTChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaCTDTChanging(string value);
    partial void OnMaCTDTChanged();
    partial void OnNgayTTChanging(string value);
    partial void OnNgayTTChanged();
    partial void OnTongtienChanging(System.Nullable<int> value);
    partial void OnTongtienChanged();
    #endregion
		
		public HOADONDATTIEC()
		{
			this._CHITIETHOADONDATTIEC = default(EntityRef<CHITIETHOADONDATTIEC>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDDT", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHDDT
		{
			get
			{
				return this._MaHDDT;
			}
			set
			{
				if ((this._MaHDDT != value))
				{
					this.OnMaHDDTChanging(value);
					this.SendPropertyChanging();
					this._MaHDDT = value;
					this.SendPropertyChanged("MaHDDT");
					this.OnMaHDDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTDT", DbType="Char(10)")]
		public string MaCTDT
		{
			get
			{
				return this._MaCTDT;
			}
			set
			{
				if ((this._MaCTDT != value))
				{
					if (this._CHITIETHOADONDATTIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCTDTChanging(value);
					this.SendPropertyChanging();
					this._MaCTDT = value;
					this.SendPropertyChanged("MaCTDT");
					this.OnMaCTDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTT", DbType="NVarChar(50)")]
		public string NgayTT
		{
			get
			{
				return this._NgayTT;
			}
			set
			{
				if ((this._NgayTT != value))
				{
					this.OnNgayTTChanging(value);
					this.SendPropertyChanging();
					this._NgayTT = value;
					this.SendPropertyChanged("NgayTT");
					this.OnNgayTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tongtien", DbType="Int")]
		public System.Nullable<int> Tongtien
		{
			get
			{
				return this._Tongtien;
			}
			set
			{
				if ((this._Tongtien != value))
				{
					this.OnTongtienChanging(value);
					this.SendPropertyChanging();
					this._Tongtien = value;
					this.SendPropertyChanged("Tongtien");
					this.OnTongtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETHOADONDATTIEC_HOADONDATTIEC", Storage="_CHITIETHOADONDATTIEC", ThisKey="MaCTDT", OtherKey="MaCTDT", IsForeignKey=true)]
		public CHITIETHOADONDATTIEC CHITIETHOADONDATTIEC
		{
			get
			{
				return this._CHITIETHOADONDATTIEC.Entity;
			}
			set
			{
				CHITIETHOADONDATTIEC previousValue = this._CHITIETHOADONDATTIEC.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETHOADONDATTIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETHOADONDATTIEC.Entity = null;
						previousValue.HOADONDATTIECs.Remove(this);
					}
					this._CHITIETHOADONDATTIEC.Entity = value;
					if ((value != null))
					{
						value.HOADONDATTIECs.Add(this);
						this._MaCTDT = value.MaCTDT;
					}
					else
					{
						this._MaCTDT = default(string);
					}
					this.SendPropertyChanged("CHITIETHOADONDATTIEC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONDATTIEC", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONDATTIECs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONDATTIECs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADONDICHVU")]
	public partial class HOADONDICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHDDV;
		
		private string _MaKH;
		
		private string _MaCTDV;
		
		private string _NgayTT;
		
		private System.Nullable<int> _TongTien;
		
		private EntityRef<CHITIETHOADONDICHVU> _CHITIETHOADONDICHVU;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDDVChanging(string value);
    partial void OnMaHDDVChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaCTDVChanging(string value);
    partial void OnMaCTDVChanged();
    partial void OnNgayTTChanging(string value);
    partial void OnNgayTTChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    #endregion
		
		public HOADONDICHVU()
		{
			this._CHITIETHOADONDICHVU = default(EntityRef<CHITIETHOADONDICHVU>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDDV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHDDV
		{
			get
			{
				return this._MaHDDV;
			}
			set
			{
				if ((this._MaHDDV != value))
				{
					this.OnMaHDDVChanging(value);
					this.SendPropertyChanging();
					this._MaHDDV = value;
					this.SendPropertyChanged("MaHDDV");
					this.OnMaHDDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTDV", DbType="Char(10)")]
		public string MaCTDV
		{
			get
			{
				return this._MaCTDV;
			}
			set
			{
				if ((this._MaCTDV != value))
				{
					if (this._CHITIETHOADONDICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCTDVChanging(value);
					this.SendPropertyChanging();
					this._MaCTDV = value;
					this.SendPropertyChanged("MaCTDV");
					this.OnMaCTDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTT", DbType="NVarChar(50)")]
		public string NgayTT
		{
			get
			{
				return this._NgayTT;
			}
			set
			{
				if ((this._NgayTT != value))
				{
					this.OnNgayTTChanging(value);
					this.SendPropertyChanging();
					this._NgayTT = value;
					this.SendPropertyChanged("NgayTT");
					this.OnNgayTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETHOADONDICHVU_HOADONDICHVU", Storage="_CHITIETHOADONDICHVU", ThisKey="MaCTDV", OtherKey="MaCTDV", IsForeignKey=true)]
		public CHITIETHOADONDICHVU CHITIETHOADONDICHVU
		{
			get
			{
				return this._CHITIETHOADONDICHVU.Entity;
			}
			set
			{
				CHITIETHOADONDICHVU previousValue = this._CHITIETHOADONDICHVU.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETHOADONDICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETHOADONDICHVU.Entity = null;
						previousValue.HOADONDICHVUs.Remove(this);
					}
					this._CHITIETHOADONDICHVU.Entity = value;
					if ((value != null))
					{
						value.HOADONDICHVUs.Add(this);
						this._MaCTDV = value.MaCTDV;
					}
					else
					{
						this._MaCTDV = default(string);
					}
					this.SendPropertyChanged("CHITIETHOADONDICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONDICHVU", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONDICHVUs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONDICHVUs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADONPHONG")]
	public partial class HOADONPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaKH;
		
		private System.Nullable<int> _TongTien;
		
		private string _NgayTT;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    partial void OnNgayTTChanging(string value);
    partial void OnNgayTTChanged();
    #endregion
		
		public HOADONPHONG()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTT", DbType="NVarChar(50)")]
		public string NgayTT
		{
			get
			{
				return this._NgayTT;
			}
			set
			{
				if ((this._NgayTT != value))
				{
					this.OnNgayTTChanging(value);
					this.SendPropertyChanging();
					this._NgayTT = value;
					this.SendPropertyChanged("NgayTT");
					this.OnNgayTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONPHONG", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONPHONGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONPHONGs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _HoTen;
		
		private System.Nullable<int> _SDT;
		
		private System.Nullable<int> _CMND;
		
		private string _Passport;
		
		private string _PhanLoaiKH;
		
		private EntitySet<THUEPHONG> _THUEPHONGs;
		
		private EntitySet<DATPHONG> _DATPHONGs;
		
		private EntitySet<HOADONDATTIEC> _HOADONDATTIECs;
		
		private EntitySet<HOADONDICHVU> _HOADONDICHVUs;
		
		private EntitySet<HOADONPHONG> _HOADONPHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    partial void OnCMNDChanging(System.Nullable<int> value);
    partial void OnCMNDChanged();
    partial void OnPassportChanging(string value);
    partial void OnPassportChanged();
    partial void OnPhanLoaiKHChanging(string value);
    partial void OnPhanLoaiKHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._THUEPHONGs = new EntitySet<THUEPHONG>(new Action<THUEPHONG>(this.attach_THUEPHONGs), new Action<THUEPHONG>(this.detach_THUEPHONGs));
			this._DATPHONGs = new EntitySet<DATPHONG>(new Action<DATPHONG>(this.attach_DATPHONGs), new Action<DATPHONG>(this.detach_DATPHONGs));
			this._HOADONDATTIECs = new EntitySet<HOADONDATTIEC>(new Action<HOADONDATTIEC>(this.attach_HOADONDATTIECs), new Action<HOADONDATTIEC>(this.detach_HOADONDATTIECs));
			this._HOADONDICHVUs = new EntitySet<HOADONDICHVU>(new Action<HOADONDICHVU>(this.attach_HOADONDICHVUs), new Action<HOADONDICHVU>(this.detach_HOADONDICHVUs));
			this._HOADONPHONGs = new EntitySet<HOADONPHONG>(new Action<HOADONPHONG>(this.attach_HOADONPHONGs), new Action<HOADONPHONG>(this.detach_HOADONPHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Int")]
		public System.Nullable<int> CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passport", DbType="Char(10)")]
		public string Passport
		{
			get
			{
				return this._Passport;
			}
			set
			{
				if ((this._Passport != value))
				{
					this.OnPassportChanging(value);
					this.SendPropertyChanging();
					this._Passport = value;
					this.SendPropertyChanged("Passport");
					this.OnPassportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanLoaiKH", DbType="NVarChar(20)")]
		public string PhanLoaiKH
		{
			get
			{
				return this._PhanLoaiKH;
			}
			set
			{
				if ((this._PhanLoaiKH != value))
				{
					this.OnPhanLoaiKHChanging(value);
					this.SendPropertyChanging();
					this._PhanLoaiKH = value;
					this.SendPropertyChanged("PhanLoaiKH");
					this.OnPhanLoaiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_THUEPHONG", Storage="_THUEPHONGs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<THUEPHONG> THUEPHONGs
		{
			get
			{
				return this._THUEPHONGs;
			}
			set
			{
				this._THUEPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATPHONG", Storage="_DATPHONGs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DATPHONG> DATPHONGs
		{
			get
			{
				return this._DATPHONGs;
			}
			set
			{
				this._DATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONDATTIEC", Storage="_HOADONDATTIECs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HOADONDATTIEC> HOADONDATTIECs
		{
			get
			{
				return this._HOADONDATTIECs;
			}
			set
			{
				this._HOADONDATTIECs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONDICHVU", Storage="_HOADONDICHVUs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HOADONDICHVU> HOADONDICHVUs
		{
			get
			{
				return this._HOADONDICHVUs;
			}
			set
			{
				this._HOADONDICHVUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONPHONG", Storage="_HOADONPHONGs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HOADONPHONG> HOADONPHONGs
		{
			get
			{
				return this._HOADONPHONGs;
			}
			set
			{
				this._HOADONPHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THUEPHONGs(THUEPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_THUEPHONGs(THUEPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_DATPHONGs(DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DATPHONGs(DATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_HOADONDATTIECs(HOADONDATTIEC entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONDATTIECs(HOADONDATTIEC entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_HOADONDICHVUs(HOADONDICHVU entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONDICHVUs(HOADONDICHVU entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_HOADONPHONGs(HOADONPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONPHONGs(HOADONPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONAN")]
	public partial class MONAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMA;
		
		private string _TenMA;
		
		private System.Nullable<int> _Gia;
		
		private EntityRef<CHITIETMONAN> _CHITIETMONAN;
		
		private EntityRef<CHITIETMONAN> _CHITIETMONAN1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMAChanging(string value);
    partial void OnMaMAChanged();
    partial void OnTenMAChanging(string value);
    partial void OnTenMAChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    #endregion
		
		public MONAN()
		{
			this._CHITIETMONAN = default(EntityRef<CHITIETMONAN>);
			this._CHITIETMONAN1 = default(EntityRef<CHITIETMONAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMA", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMA
		{
			get
			{
				return this._MaMA;
			}
			set
			{
				if ((this._MaMA != value))
				{
					if (this._CHITIETMONAN1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMAChanging(value);
					this.SendPropertyChanging();
					this._MaMA = value;
					this.SendPropertyChanged("MaMA");
					this.OnMaMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMA", DbType="NVarChar(50)")]
		public string TenMA
		{
			get
			{
				return this._TenMA;
			}
			set
			{
				if ((this._TenMA != value))
				{
					this.OnTenMAChanging(value);
					this.SendPropertyChanging();
					this._TenMA = value;
					this.SendPropertyChanged("TenMA");
					this.OnTenMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CHITIETMONAN", Storage="_CHITIETMONAN", ThisKey="MaMA", OtherKey="MAMA", IsUnique=true, IsForeignKey=false)]
		public CHITIETMONAN CHITIETMONAN
		{
			get
			{
				return this._CHITIETMONAN.Entity;
			}
			set
			{
				CHITIETMONAN previousValue = this._CHITIETMONAN.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETMONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETMONAN.Entity = null;
						previousValue.MONAN = null;
					}
					this._CHITIETMONAN.Entity = value;
					if ((value != null))
					{
						value.MONAN = this;
					}
					this.SendPropertyChanged("CHITIETMONAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETMONAN_MONAN", Storage="_CHITIETMONAN1", ThisKey="MaMA", OtherKey="MAMA", IsForeignKey=true)]
		public CHITIETMONAN CHITIETMONAN1
		{
			get
			{
				return this._CHITIETMONAN1.Entity;
			}
			set
			{
				CHITIETMONAN previousValue = this._CHITIETMONAN1.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETMONAN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETMONAN1.Entity = null;
						previousValue.MONAN1 = null;
					}
					this._CHITIETMONAN1.Entity = value;
					if ((value != null))
					{
						value.MONAN1 = this;
						this._MaMA = value.MAMA;
					}
					else
					{
						this._MaMA = default(string);
					}
					this.SendPropertyChanged("CHITIETMONAN1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhong;
		
		private string _TenPhong;
		
		private string _LoaiPhong;
		
		private System.Nullable<int> _Gia;
		
		private string _Tinhtrang;
		
		private EntitySet<THUEPHONG> _THUEPHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnLoaiPhongChanging(string value);
    partial void OnLoaiPhongChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    partial void OnTinhtrangChanging(string value);
    partial void OnTinhtrangChanged();
    #endregion
		
		public PHONG()
		{
			this._THUEPHONGs = new EntitySet<THUEPHONG>(new Action<THUEPHONG>(this.attach_THUEPHONGs), new Action<THUEPHONG>(this.detach_THUEPHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(20)")]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiPhong", DbType="NVarChar(20)")]
		public string LoaiPhong
		{
			get
			{
				return this._LoaiPhong;
			}
			set
			{
				if ((this._LoaiPhong != value))
				{
					this.OnLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._LoaiPhong = value;
					this.SendPropertyChanged("LoaiPhong");
					this.OnLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tinhtrang", DbType="Char(10)")]
		public string Tinhtrang
		{
			get
			{
				return this._Tinhtrang;
			}
			set
			{
				if ((this._Tinhtrang != value))
				{
					this.OnTinhtrangChanging(value);
					this.SendPropertyChanging();
					this._Tinhtrang = value;
					this.SendPropertyChanged("Tinhtrang");
					this.OnTinhtrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_THUEPHONG", Storage="_THUEPHONGs", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<THUEPHONG> THUEPHONGs
		{
			get
			{
				return this._THUEPHONGs;
			}
			set
			{
				this._THUEPHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THUEPHONGs(THUEPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_THUEPHONGs(THUEPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
}
#pragma warning restore 1591
